@using Project.Service.Models
@using Project.Service.Helpers

@{
    var Model = (Paging)ViewData["Paging"];
    int CurrentPage = Model.CurrentPage;
    int CountPages = Model.Total;
    int PerPage = Model.PerPage;
    string controllerName = (string)ViewData["ControllerName"];
    int MakeFilter = 0;
    if (ViewData["MakeFilter"] != null)
    {
        MakeFilter = ((Filtering)ViewData["MakeFilter"]).FilterId ?? 0;
    }

    int start = CurrentPage - 2;
    
    if(start < 1)
    {
        start = 1;
    }
    
    int end = start + 4;
    
    if(end > CountPages)
    {
        end = CountPages;
    }
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item">
            @Html.ActionLink("First", "Index", controllerName, new { page = 1, perPage = PerPage, makeFilter = MakeFilter }, new { @class = "page-link" })
        </li>
        <li class="page-item">
            @Html.ActionLink("Previous", "Index", controllerName, new { page = (CurrentPage > 1)? CurrentPage - 1: 1, perPage = PerPage, makeFilter = MakeFilter }, new { @class = "page-link" })
        </li>
        @for(int i = start; i <= end; i++)
        {
            <li class="page-item @(i == CurrentPage? "active":"")">
                @Html.ActionLink(i.ToString(), "Index", controllerName, new { page = i, perPage = PerPage, makeFilter = MakeFilter }, new { @class = "page-link" })
            </li>
        }
        <li class="page-item">
            @Html.ActionLink("Next", "Index", controllerName, new { page = (CurrentPage < CountPages)? CurrentPage + 1: CountPages, perPage = PerPage, makeFilter = MakeFilter }, new { @class = "page-link" })
        </li>
        <li class="page-item">
            @Html.ActionLink("Last", "Index", controllerName, new { page = CountPages, perPage = PerPage, makeFilter = MakeFilter }, new { @class = "page-link" })
        </li>
    </ul>
</nav>